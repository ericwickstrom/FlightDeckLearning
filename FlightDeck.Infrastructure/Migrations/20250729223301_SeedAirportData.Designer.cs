// <auto-generated />
using System;
using FlightDeck.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightDeck.Infrastructure.Migrations
{
    [DbContext(typeof(FlightDeckDbContext))]
    [Migration("20250729223301_SeedAirportData")]
    partial class SeedAirportData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightDeck.Core.Models.Airport", b =>
                {
                    b.Property<string>("IataCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IataCode");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            IataCode = "ATL",
                            City = "Atlanta",
                            Country = "USA",
                            Name = "Hartsfield-Jackson Atlanta International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "LAX",
                            City = "Los Angeles",
                            Country = "USA",
                            Name = "Los Angeles International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "ORD",
                            City = "Chicago",
                            Country = "USA",
                            Name = "O'Hare International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "JFK",
                            City = "New York",
                            Country = "USA",
                            Name = "John F. Kennedy International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "DFW",
                            City = "Dallas",
                            Country = "USA",
                            Name = "Dallas/Fort Worth International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "DEN",
                            City = "Denver",
                            Country = "USA",
                            Name = "Denver International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "LAS",
                            City = "Las Vegas",
                            Country = "USA",
                            Name = "McCarran International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "PHX",
                            City = "Phoenix",
                            Country = "USA",
                            Name = "Phoenix Sky Harbor International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "MIA",
                            City = "Miami",
                            Country = "USA",
                            Name = "Miami International",
                            Region = "North America"
                        },
                        new
                        {
                            IataCode = "SEA",
                            City = "Seattle",
                            Country = "USA",
                            Name = "Seattle-Tacoma International",
                            Region = "North America"
                        });
                });

            modelBuilder.Entity("FlightDeck.Core.Models.UserProgress", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AirportCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CorrectAnswers")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastStudied")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalAttempts")
                        .HasColumnType("int");

                    b.HasKey("UserId", "AirportCode");

                    b.ToTable("UserProgress");
                });
#pragma warning restore 612, 618
        }
    }
}
